<target name="build-jetm-core" depends="init-core">
  <tstamp>
    <format property="build.time" pattern="MM/dd/yyyy hh:mm aa"/>
  </tstamp>

  <echo file="${module.core.dest.classes}/jetm.version">
    jetm.version=${release.version}
    jetm.build.by=${user.name}
    jetm.build.date=${build.time}
  </echo>
  <javac
    srcdir="${module.core.src.java}"
    excludes="**/SunHighResTimer.java,**/Java15NanoTimer.java,**/Java15CollectionFactory.java"
    destdir="${module.core.dest.classes}"
    classpathref="build.classpath"
    debug="true"
    target="1.3"
    source="1.3"
    />

  <copy todir="${module.core.dest.classes}">
    <fileset dir="${module.core.src.java}">
      <include name="**/*.xml"/>
      <include name="**/*.dtd"/>
    </fileset>
  </copy>

  <available property="timer.sun.misc.perf" classname="sun.misc.Perf"/>
  <available property="vm.jdk15" classname="java.lang.Enum"/>
  <available property="vm.jdk14" classname="java.nio.ByteBuffer"/>

  <antcall target="compile-sun-highres"/>
  <antcall target="compile-jdk15-core-sources"/>


  <jar jarfile="${build.lib.dir}/${release.name}-${release.version}.jar">
    <fileset dir="${module.core.dest.classes}"
             excludes="**/test/**"
      />
    <manifest>
      <section name="JETM Core">
        <attribute name="Version" value="${release.version}"/>
        <attribute name="Date" value="${current.date}"/>
      </section>
    </manifest>
  </jar>

</target>

<target name="compile-jdk15-core-sources" if="vm.jdk15">
<javac
  srcdir="${module.core.src.java}"
  includes="**/Java15NanoTimer.java,**/Java15CollectionFactory.java"
  destdir="${module.core.dest.classes}"
  classpathref="build.classpath"
  debug="true"
  target="1.3"
  source="1.3"
  />
</target>

<target name="compile-sun-highres" if="timer.sun.misc.perf">
<javac
  srcdir="${module.core.src.java}"
  includes="**/SunHighResTimer.java"
  destdir="${module.core.dest.classes}"
  classpathref="build.classpath"
  debug="true"
  target="1.3"
  source="1.3"
  />
</target>

<target name="test-jetm-core" depends="build-jetm-core">
<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
  <classpath>
    <path refid="build.classpath"/>
  </classpath>
</taskdef>

<junit printsummary="yes" fork="yes" haltonfailure="true" showoutput="true">
  <jvmarg value="-Djetm.log.level=warn"/>

  <classpath>
    <pathelement location="${module.core.dest.classes}"/>
    <path refid="build.classpath"/>
  </classpath>

  <formatter type="plain"/>
  <batchtest todir="${module.core.dest.test}">
    <fileset dir="${module.core.src.java}">
      <include name="**/test/**/*Test.java"/>
    </fileset>
  </batchtest>

</junit>

</target>


<target name="maven2-core-bundle" depends="build-jetm-core">
<mkdir dir="${module.core.dest.maven2}"/>
<copy todir="${module.core.dest.maven2}">
  <fileset dir="${module.core.dir}/etc/maven2"/>
  <filterset>
    <filter token="version" value="${release.version}"/>
  </filterset>
</copy>
<copy file="${doc.dir}/license.txt" tofile="${module.core.dest.maven2}/LICENSE.txt"/>

<copy file="${build.lib.dir}/${release.name}-${release.version}.jar"
      todir="${module.core.dest.maven2}"/>

<jar destfile="${module.core.dest.maven2}/${release.name}-${release.version}-sources.jar">
  <fileset dir="${module.core.src.java}" excludes="**/test/**"/>
</jar>

<jar destfile="${build.dist.dir}/${release.name}-${release.version}-bundle.jar">
  <fileset dir="${module.core.dest.maven2}"/>
</jar>
</target>

<target name="init-core">
<mkdir dir="${build.lib.dir}"/>
<mkdir dir="${build.dist.dir}"/>
<mkdir dir="${module.core.dest.classes}"/>
<mkdir dir="${module.core.dest.test}"/>
</target>